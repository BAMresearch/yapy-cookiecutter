[project]
name = "{{ cookiecutter.distribution_name }}"
description = {{ '{0!r}'.format(cookiecutter.project_short_description).lstrip('ub')|replace("'",'"') }}
authors = [{ name = {{ '{0!r}'.format(cookiecutter.full_name).lstrip("ub")|replace("'",'"') }}, email = {{ '{0!r}'.format(cookiecutter.email).lstrip("ub")|replace("'",'"') }} }]
dynamic = ["version", "readme"]
license = {text = "{{ cookiecutter.license }}"}
classifiers = [
  # complete classifier list: http://pypi.python.org/pypi?%3Aaction=list_classifiers
  "Development Status :: 4 - Beta",
{%- if cookiecutter.license == "no" %}
{%- elif cookiecutter.license in ["BSD 2-Clause License", "BSD 3-Clause License"] %}
  "License :: OSI Approved :: BSD License",
{%- elif cookiecutter.license == "MIT license" %}
  "License :: OSI Approved :: MIT License",
{%- elif cookiecutter.license == "ISC license" %}
  "License :: OSI Approved :: ISC License (ISCL)",
{%- elif cookiecutter.license == "Apache License 2.0" %}
  "License :: OSI Approved :: Apache Software License",
{%- elif "LGPLv3+" in cookiecutter.license %}
  "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
{%- elif "LGPLv3" in cookiecutter.license %}
  "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
{%- elif "LGPLv2" in cookiecutter.license %}
  "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
{%- elif "LGPLv2" in cookiecutter.license %}
  "License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)",
{%- endif %}
  "Operating System :: Unix",
  "Operating System :: POSIX",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Framework :: Jupyter :: JupyterLab",
  "Topic :: Utilities",
  "Topic :: Scientific/Engineering",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
]

[project.urls]
homepage = "{{ cookiecutter.docs_url }}"
documentation = "{{ cookiecutter.docs_url }}"
repository = "https://{{ cookiecutter.repo_hosting_domain }}/{{ cookiecutter.repo_userorg }}/{{ cookiecutter.repo_name }}"
changelog = "{{ cookiecutter.docs_url }}/changelog.html"

[build-system]
requires = [
    "setuptools>=40.6",
    "wheel",
]
# check-manifest checks that, https://github.com/mgedmin/check-manifest/commit/c9df78
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
include = ["{{ cookiecutter.package_name }}*"]

[tool.setuptools.dynamic]
version = {attr = "{{ cookiecutter.package_name }}.__version__"}
readme = {file = ["README.rst", "CHANGELOG.md"]}

[tool.coverage.report]
path = "coverage-report"

# on version numbers: https://peps.python.org/pep-0440/
# and bottom of https://softwareengineering.stackexchange.com/a/151558
[tool.semantic_release]
#major_on_zero = false # no major release when current major version is zero
version_variable = [                        # version location
    "src/{{ cookiecutter.package_name }}/__init__.py:__version__",
    "docs/conf.py:version",
]
version_pattern = [
    "README.rst:v{version}.svg",
    "README.rst:v{version}...main",
]
version_source = "tag"
prerelease_tag = "dev"
branch = "main"                             # branch to make releases of
changelog_file = "CHANGELOG.md"             # changelog file
build_command = "python3 -m build"          # build dists
upload_to_release = false                   # auto-create GitHub release
upload_to_pypi = false                      # don't auto-upload to PyPI
remove_dist = false                         # don't remove dists
#patch_without_tag = false                   # patch release by default

[tool.blue]
line-length = 100
target-version = ["py37"]
skip-string-normalization = true

[tool.isort]
line_length = 100
group_by_package = true
known_first_party = "{{ cookiecutter.package_name }}"
extend_skip = ["ci/templates", ".ipynb_checkpoints"]
